{
  "name": "sqs-producer",
  "version": "1.3.1",
  "description": "Enqueues messages onto a given SQS queue",
  "main": "index.js",
  "scripts": {
    "test": "mocha",
    "coverage": "istanbul cover _mocha -- -R dot && open coverage/lcov-report/index.html",
    "lint": "jshint .",
    "lcov": "istanbul cover _mocha -- -R dot"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/BBC/sqs-producer.git"
  },
  "author": {
    "name": "ibl-team@lists.forge.bbc.co.uk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/BBC/sqs-producer/issues"
  },
  "keywords": [
    "aws",
    "sqs",
    "producer",
    "queue"
  ],
  "homepage": "https://github.com/BBC/sqs-producer",
  "dependencies": {
    "aws-sdk": "^2.1.2",
    "selectn": "^0.9.6",
    "sinon": "^1.12.2"
  },
  "devDependencies": {
    "codeclimate-test-reporter": "0.0.4",
    "istanbul": "^0.3.5",
    "jscoverage": "^0.5.9",
    "jshint": "^2.5.10",
    "mocha": "^2.0.1"
  },
  "jshintConfig": {
    "quotmark": "single",
    "unused": true,
    "undef": true,
    "node": true,
    "globals": {
      "describe": false,
      "it": false,
      "before": false,
      "beforeEach": false,
      "after": false,
      "afterEach": false
    }
  },
  "gitHead": "99b93c5ab1b6dcba431f4cec362ac339af79fcb2",
  "readme": "sqs-producer\n====================\n\n[![Build Status](https://travis-ci.org/BBC/sqs-producer.svg)](https://travis-ci.org/BBC/sqs-producer) [![Code Climate](https://codeclimate.com/github/BBC/sqs-producer/badges/gpa.svg)](https://codeclimate.com/github/BBC/sqs-producer) [![Test Coverage](https://codeclimate.com/github/BBC/sqs-producer/badges/coverage.svg)](https://codeclimate.com/github/BBC/sqs-producer)\n\nEnqueues messages onto a given SQS queue\n\n## Installation\n\n```\nnpm install BBC/sqs-producer --save\n```\n## Usage\n\n```js\nvar Producer = require('sqs-producer');\n\nvar producer = Producer.create({\n  queueUrl: 'https://sqs.eu-west-1.amazonaws.com/account-id/queue-name',\n  region: 'eu-west-1'\n});\n\n// send messages to the queue\nproducer.send(['msg1', 'msg2'], function(err) {\n  if (err) console.log(err);\n});\n\n// get the current size of the queue\nproducer.queueSize(function (err, size) {\n  if (err) console.log(err);\n\n  console.log('There are', size, 'messages on the queue.');\n});\n\n// send a message to the queue with a specific ID (by default the body is used as the ID)\nproducer.send([{\n  id: 'id1',\n  body: 'Hello world'\n}], function(err) {\n  if (err) console.log(err);\n});\n\n// send a message to the queue with\n// - delaySeconds (must be an number contained within 0 and 900)\n// - messageAttributes\nproducer.send([\n  {\n    id: 'id1',\n    body: 'Hello world with two string attributes: attr1 and attr2',\n    messageAttributes: {\n      attr1: { DataType: 'String', StringValue: 'stringValue' }\n      attr2: { DataType: 'BinaryValue', BinaryValue: new Buffer('binaryValue') }\n    }\n  },\n  {\n    id: 'id2',\n    body: 'Hello world delayed by 5 seconds',\n    delaySeconds: 5\n  }\n], function(err) {\n  if (err) console.log(err);\n});\n\n```\n\n## Test\n\n```\nnpm test\n```\n\n## Coverage\nFor coverage report, run the command:\n\n```\nnpm run coverage\n```\n\n## JSLint\nTo check for problems using JSLint\n\n```\nnpm run lint\n```\n",
  "readmeFilename": "README.md",
  "_id": "sqs-producer@1.3.1",
  "_shasum": "79cf37f51a90a525ede7fdeef32468720bc50b9e",
  "_from": "../../../../tmp/npm-17339-0d721d4b/git-cache-71c2c50cf70b/99b93c5ab1b6dcba431f4cec362ac339af79fcb2",
  "_resolved": "git://github.com/BBC/sqs-producer#99b93c5ab1b6dcba431f4cec362ac339af79fcb2"
}
